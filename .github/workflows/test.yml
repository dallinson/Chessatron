# Run unit tests using CTest
name: Tests

on:
  push:
    branches: [ canon ]
  pull_request:
    branches: [ canon ]

jobs:
  #run-tests:
  #  runs-on: ubuntu-latest

#    steps:
 #   - uses: actions/checkout@v2
  #  - name: Run unit tests
   #   uses: HorstBaerbel/action-ctest@1.1
      # These are optional (defaults displayed)
    #  with:
     #   sourcedir: '.'
      #  builddir: 'build'
       # cmakeoptions: '--config Debug'
        #ctestoptions: ''
  check-code-coverage:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Create build dir
        run: mkdir build
      - name: Set up Clang
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 17
      - name: Build tests
        working-directory: build
        run: |
          cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_C_COMPILER=clang-17 -DCMAKE_CXX_COMPILER=clang++-17
          make chessatron_tests
      - name: Install gcovr
        run: |
          python -m pip install --upgrade pip
          sudo pip install gcovr
      - name: Generate cobertura output
        working-directory: build
        run: |
          ctest -c Release
          sudo gcovr -r .. -f '\.\./src' --cobertura cobertura.xml
      - name: Code Coverage Summary
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: build/cobertura.xml
          badge: true
          fail_below_min: true