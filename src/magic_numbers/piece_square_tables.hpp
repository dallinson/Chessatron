#pragma once

#include <array>

#include "../utils.hpp"
#include "../pieces.hpp"

namespace PieceSquareTables {
    // clang-format off

    constexpr std::array<Score, 6> MidgameScores = { 106, 464, 492, 596, 1230,  0};
    constexpr std::array<Score, 6> EndgameScores = { 129, 425, 395, 574,  1194,  0};

    constexpr std::array<Score, 64> PawnMidgameTable = {
                0, 0, 0, 0, 0, 0, 0, 0, 
                31, 47, 30, 46, 40, 32, -7, -22,
                -14, -7, 11, 15, 16, 28, 17, -5,
                -22, -8, -7, -6, 6, 1, 3, -10,
                -27, -13, -14, -5, -5, -9, -4, -16,
                -29, -15, -16, -15, -7, -13, 4, -13,
                -29, -16, -18, -23, -13, -4, 8, -17,
                0, 0, 0, 0, 0, 0, 0, 0,
            };
    constexpr std::array<Score, 64> KnightMidgameTable = {
                -81, -65, -29, -14, 8, -35, -53, -52, 
                -10, 2, 17, 25, 13, 51, 0, 9,
                -1, 18, 27, 32, 57, 58, 31, 12,
                -5, 3, 15, 27, 15, 31, 7, 14,
                -12, -4, 3, 3, 8, 5, 5, -7,
                -23, -11, -5, -2, 4, -2, 1, -14,
                -29, -23, -14, -9, -8, -6, -13, -15,
                -50, -25, -30, -22, -20, -14, -24, -34,
            };
    constexpr std::array<Score, 64> BishopMidgameTable = {
                -38, -42, -41, -60, -58, -46, -30, -45, 
                -22, -8, -13, -25, -8, -2, -9, -23,
                -19, -6, -2, 7, 1, 20, 3, -5,
                -24, -18, -4, 2, 0, -3, -18, -24,
                -28, -20, -20, -7, -8, -19, -21, -24,
                -23, -20, -19, -19, -18, -20, -19, -16,
                -23, -22, -16, -28, -24, -16, -14, -20,
                -34, -23, -33, -35, -33, -35, -22, -27,
            };
    constexpr std::array<Score, 64> RookMidgameTable = {
                -43, -46, -40, -36, -28, -13, -30, -24, 
                -50, -49, -40, -28, -37, -19, -26, -13,
                -61, -49, -47, -46, -28, -29, -5, -25,
                -70, -64, -61, -54, -52, -53, -50, -50,
                -81, -77, -71, -65, -66, -76, -63, -69,
                -85, -79, -75, -76, -72, -74, -58, -69,
                -87, -80, -72, -74, -72, -70, -63, -78,
                -79, -77, -72, -70, -67, -74, -66, -79,
            };
    constexpr std::array<Score, 64> QueenMidgameTable = {
                -88, -85, -63, -54, -49, -47, -47, -74, 
                -70, -80, -76, -81, -80, -52, -64, -41,
                -70, -71, -71, -66, -59, -36, -37, -41,
                -80, -77, -75, -75, -74, -68, -68, -67,
                -80, -80, -80, -77, -77, -78, -73, -70,
                -81, -77, -80, -81, -79, -77, -70, -72,
                -81, -79, -74, -75, -76, -70, -68, -61,
                -83, -87, -85, -79, -82, -89, -75, -83,
            };
    constexpr std::array<Score, 64> KingMidgameTable = {
                14, 22, 26, -49, -28, -8, 16, 74, 
                -49, -29, -45, 2, -26, -17, -11, -26,
                -60, -9, -42, -49, -28, 7, -9, -27,
                -49, -52, -57, -75, -70, -56, -59, -74,
                -43, -46, -63, -72, -74, -57, -60, -75,
                -20, -11, -40, -46, -45, -45, -19, -29,
                26, 3, -3, -23, -23, -13, 11, 16,
                24, 35, 19, -31, 0, -18, 23, 26,
            };

    constexpr std::array<std::array<Score, 64>, 6> MidgameTables = {
        {
            PawnMidgameTable,
            KnightMidgameTable,
            BishopMidgameTable,
            RookMidgameTable,
            QueenMidgameTable,
            KingMidgameTable,
        }
    };

    constexpr std::array<Score, 64> PawnEndgameTable = {
                0, 0, 0, 0, 0, 0, 0, 0,
                112, 109, 108, 83, 79, 86, 110, 117,
                76, 79, 61, 50, 46, 38, 64, 62,
                39, 33, 23, 19, 14, 16, 26, 26,
                26, 25, 16, 14, 13, 14, 20, 16,
                23, 24, 15, 21, 18, 16, 19, 14,
                26, 26, 19, 21, 25, 19, 19, 15,
                0, 0, 0, 0, 0, 0, 0, 0,
            };
    constexpr std::array<Score, 64> KnightEndgameTable = {
                -17, 16, 23, 18, 17, 6, 17, -28,
                15, 24, 26, 24, 20, 15, 21, 6,
                22, 29, 37, 37, 28, 26, 23, 14,
                28, 37, 43, 44, 45, 41, 36, 22,
                27, 32, 44, 44, 45, 40, 33, 22,
                18, 28, 33, 40, 39, 30, 25, 18,
                14, 22, 27, 28, 27, 26, 16, 18,
                11, 2, 19, 21, 20, 14, 5, 8,
            };
    constexpr std::array<Score, 64> BishopEndgameTable = {
                36, 40, 39, 45, 42, 37, 34, 33,
                29, 37, 39, 40, 35, 34, 39, 28,
                42, 39, 43, 37, 39, 41, 39, 38,
                40, 47, 44, 51, 47, 46, 46, 40,
                37, 45, 50, 48, 48, 47, 44, 31,
                36, 43, 46, 46, 48, 46, 37, 31,
                34, 34, 33, 41, 42, 36, 37, 23,
                26, 36, 24, 36, 33, 33, 28, 20,
            };
    constexpr std::array<Score, 64> RookEndgameTable = {
                139, 142, 145, 142, 137, 126, 135, 134,
                140, 146, 148, 141, 142, 135, 132, 128,
                141, 141, 141, 139, 130, 129, 126, 125,
                142, 140, 144, 140, 134, 132, 131, 129,
                137, 137, 137, 137, 136, 136, 128, 129,
                134, 133, 133, 136, 132, 129, 119, 121,
                132, 133, 133, 134, 130, 127, 123, 126,
                128, 134, 138, 137, 133, 130, 128, 123,
            };
    constexpr std::array<Score, 64> QueenEndgameTable = {
                158, 166, 169, 166, 163, 161, 144, 161,
                146, 167, 182, 192, 201, 181, 176, 161,
                153, 162, 181, 183, 189, 178, 164, 158,
                157, 168, 176, 186, 193, 185, 178, 168,
                154, 169, 172, 185, 182, 177, 167, 159,
                149, 155, 167, 166, 169, 166, 154, 146,
                142, 145, 145, 151, 153, 139, 125, 110,
                140, 144, 147, 143, 144, 143, 127, 131,
            };
    constexpr std::array<Score, 64> KingEndgameTable = {
                -49, -28, -20, 6, -2, 0, -6, -61,
                0, 16, 20, 11, 23, 27, 24, 9,
                8, 17, 27, 31, 32, 29, 29, 12,
                3, 20, 28, 34, 34, 32, 28, 15,
                -5, 11, 23, 29, 30, 23, 17, 9,
                -10, 1, 12, 18, 17, 13, 2, -4,
                -23, -8, -2, 4, 6, 0, -10, -19,
                -39, -29, -20, -11, -24, -12, -26, -41,
            };

    constexpr std::array<std::array<Score, 64>, 6> EndgameTables = {
        {
            PawnEndgameTable,
            KnightEndgameTable,
            BishopEndgameTable,
            RookEndgameTable,
            QueenEndgameTable,
            KingEndgameTable,
        }
    };

    template <bool is_endgame>
    constexpr inline Score get_psqt_score(const Piece p, uint8_t pos) {
        if (p.get_side() == Side::WHITE) {
            pos ^= 0b00111000;
        }
        if constexpr (is_endgame) {
            return EndgameTables[static_cast<int>(p.get_type()) - 1][pos];
        } else {
            return MidgameTables[static_cast<int>(p.get_type()) - 1][pos];
        }
    }

    // clang-format on
};