#pragma once

#include <array>

#include "../utils.hpp"
#include "../pieces.hpp"

namespace PieceSquareTables {
    // clang-format off

    constexpr std::array<Score, 6> MidgameScores = { 106, 464, 492, 596, 1230,  0};
    constexpr std::array<Score, 6> EndgameScores = { 129, 425, 395, 574,  1194,  0};

    constexpr std::array<Score, 64> PawnMidgameTable = {
                0, 0, 0, 0, 0, 0, 0, 0, 
                142, 191, 138, 194, 168, 155, 25, -15,
                1, 24, 80, 92, 97, 135, 98, 27,
                -25, 17, 23, 26, 63, 48, 56, 13,
                -43, 4, 0, 30, 30, 18, 34, -5,
                -46, -4, -4, -3, 23, 6, 58, 6,
                -46, -4, -11, -28, 6, 34, 74, -7,
                0, 0, 0, 0, 0, 0, 0, 0,
            };
    constexpr std::array<Score, 64> KnightMidgameTable = {
                -232, -178, -58, -14, 57, -78, -131, -141, 
                -8, 28, 80, 100, 77, 186, 39, 62,
                23, 87, 113, 134, 204, 220, 129, 84,
                15, 39, 77, 119, 83, 131, 55, 76,
                -7, 19, 41, 44, 59, 51, 49, 11,
                -39, -2, 21, 28, 47, 29, 36, -10,
                -60, -41, -13, 7, 9, 15, -8, -13,
                -131, -45, -66, -40, -33, -12, -41, -81,
            };
    constexpr std::array<Score, 64> BishopMidgameTable = {
                3, -11, -25, -59, -67, -20, 29, -29, 
                39, 74, 57, 25, 76, 104, 75, 46,
                53, 91, 99, 131, 111, 173, 121, 95,
                36, 55, 95, 115, 109, 102, 56, 34,
                23, 47, 54, 89, 85, 56, 46, 36,
                39, 51, 51, 57, 58, 50, 54, 62,
                42, 44, 64, 27, 40, 62, 72, 49,
                3, 40, 12, -1, 7, 4, 41, 24,
            };
    constexpr std::array<Score, 64> RookMidgameTable = {
                140, 126, 142, 156, 184, 191, 181, 203, 
                112, 110, 141, 176, 152, 206, 182, 236,
                76, 114, 115, 120, 170, 175, 253, 195,
                47, 68, 73, 91, 100, 99, 114, 118,
                14, 20, 36, 56, 56, 28, 71, 55,
                1, 21, 31, 30, 42, 37, 90, 57,
                -3, 17, 43, 37, 46, 50, 77, 26,
                28, 31, 47, 56, 63, 45, 67, 28,
            };
    constexpr std::array<Score, 64> QueenMidgameTable = {
                125, 131, 203, 233, 250, 268, 265, 178, 
                180, 142, 157, 139, 147, 235, 196, 274,
                186, 181, 178, 196, 219, 287, 287, 278,
                153, 162, 165, 164, 169, 194, 192, 198,
                156, 152, 153, 165, 160, 162, 178, 187,
                150, 165, 156, 156, 159, 170, 191, 183,
                150, 157, 176, 175, 172, 188, 194, 215,
                149, 129, 141, 166, 152, 130, 170, 148,
            };
    constexpr std::array<Score, 64> KingMidgameTable = {
                24, 43, 81, -150, -77, -11, 76, 155, 
                -125, -62, -109, 26, -43, -41, -2, -21,
                -157, 10, -100, -125, -70, 58, 20, -33,
                -114, -132, -149, -224, -200, -159, -155, -199,
                -112, -121, -184, -217, -227, -170, -172, -219,
                -39, -13, -111, -133, -129, -125, -48, -78,
                105, 34, 13, -53, -53, -23, 57, 72,
                94, 135, 89, -80, 27, -39, 97, 101,
            };

    constexpr std::array<std::array<Score, 64>, 6> MidgameTables = {
        {
            PawnMidgameTable,
            KnightMidgameTable,
            BishopMidgameTable,
            RookMidgameTable,
            QueenMidgameTable,
            KingMidgameTable,
        }
    };

    constexpr std::array<Score, 64> PawnEndgameTable = {
                0, 0, 0, 0, 0, 0, 0, 0, 
                362, 346, 349, 268, 257, 272, 352, 373,
                243, 255, 199, 162, 150, 125, 205, 199,
                128, 109, 78, 62, 47, 52, 84, 86,
                87, 83, 54, 48, 45, 48, 66, 54,
                77, 80, 51, 71, 60, 55, 63, 48,
                86, 87, 65, 74, 83, 63, 62, 50,
                0, 0, 0, 0, 0, 0, 0, 0,
            };
    constexpr std::array<Score, 64> KnightEndgameTable = {
                6, 102, 124, 108, 113, 81, 110, -27, 
                91, 122, 135, 133, 122, 98, 115, 64,
                114, 142, 165, 168, 142, 136, 125, 97,
                132, 169, 185, 187, 191, 179, 163, 119,
                136, 149, 188, 188, 194, 176, 154, 121,
                110, 140, 157, 179, 176, 150, 132, 111,
                95, 118, 136, 142, 140, 134, 105, 111,
                85, 61, 110, 115, 114, 99, 73, 68,
            };
    constexpr std::array<Score, 64> BishopEndgameTable = {
                172, 192, 190, 209, 200, 184, 174, 168, 
                153, 188, 193, 200, 185, 181, 196, 153,
                200, 194, 209, 193, 201, 202, 192, 194,
                195, 222, 213, 233, 221, 217, 217, 196,
                187, 216, 230, 224, 223, 222, 212, 170,
                189, 205, 217, 218, 225, 218, 190, 172,
                178, 179, 176, 202, 206, 185, 191, 148,
                150, 179, 148, 185, 178, 180, 156, 131,
            };
    constexpr std::array<Score, 64> RookEndgameTable = {
                464, 476, 488, 480, 466, 453, 453, 449, 
                461, 481, 489, 475, 476, 450, 443, 422,
                462, 466, 470, 468, 441, 435, 420, 412,
                465, 463, 478, 472, 449, 442, 431, 421,
                453, 460, 466, 463, 457, 455, 432, 425,
                447, 446, 447, 455, 447, 436, 405, 402,
                440, 445, 446, 451, 437, 430, 414, 422,
                435, 450, 463, 461, 449, 441, 433, 421,
            };
    constexpr std::array<Score, 64> QueenEndgameTable = {
                730, 759, 764, 759, 751, 729, 683, 738, 
                674, 743, 793, 824, 847, 799, 776, 731,
                697, 721, 791, 791, 813, 782, 735, 721,
                714, 743, 774, 804, 832, 804, 787, 754,
                703, 751, 760, 798, 798, 782, 755, 728,
                691, 714, 749, 749, 756, 745, 711, 684,
                678, 687, 685, 701, 709, 666, 621, 576,
                665, 684, 689, 680, 681, 677, 624, 635,
            };
    constexpr std::array<Score, 64> KingEndgameTable = {
                -148, -82, -58, 26, -4, 1, -16, -161, 
                -4, 44, 61, 37, 70, 91, 77, 28,
                22, 50, 84, 99, 100, 87, 86, 38,
                6, 60, 90, 112, 110, 104, 88, 50,
                -14, 36, 78, 101, 102, 80, 60, 34,
                -30, 6, 43, 64, 64, 50, 18, -1,
                -64, -19, 1, 20, 26, 9, -21, -49,
                -117, -87, -55, -26, -67, -30, -71, -118,
            };

    constexpr std::array<std::array<Score, 64>, 6> EndgameTables = {
        {
            PawnEndgameTable,
            KnightEndgameTable,
            BishopEndgameTable,
            RookEndgameTable,
            QueenEndgameTable,
            KingEndgameTable,
        }
    };

    template <bool is_endgame>
    constexpr inline Score get_psqt_score(const Piece p, uint8_t pos) {
        if (p.get_side() == Side::WHITE) {
            pos ^= 0b00111000;
        }
        if constexpr (is_endgame) {
            return EndgameTables[static_cast<int>(p.get_type()) - 1][pos];
        } else {
            return MidgameTables[static_cast<int>(p.get_type()) - 1][pos];
        }
    }

    // clang-format on
};