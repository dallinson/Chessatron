#pragma once

#include <array>

#include "../utils.hpp"
#include "../pieces.hpp"

namespace PieceSquareTables {
    // clang-format off

    constexpr std::array<Score, 6> MidgameScores = { 64, 247, 232, 377, 610,  0};
    constexpr std::array<Score, 6> EndgameScores = { 40, 102, 145, 170,  438,  0};

    constexpr std::array<Score, 64> PawnMidgameTable = {
                0, 0, 0, 0, 0, 0, 0, 0, 
                10, 25, 10, 26, 21, 9, -25, -38,
                -30, -24, -7, -3, -3, 9, -1, -22,
                -38, -26, -25, -23, -12, -17, -14, -26,
                -44, -30, -31, -23, -23, -26, -21, -32,
                -45, -32, -33, -32, -25, -30, -14, -29,
                -45, -33, -35, -40, -30, -22, -10, -34,
                0, 0, 0, 0, 0, 0, 0, 0,
            };
    constexpr std::array<Score, 64> KnightMidgameTable = {
                -174, -156, -124, -101, -93, -128, -149, -146, 
                -102, -93, -80, -73, -84, -47, -96, -85,
                -95, -81, -71, -67, -43, -44, -69, -84,
                -102, -95, -83, -72, -84, -69, -91, -84,
                -110, -101, -95, -94, -90, -92, -92, -104,
                -120, -108, -103, -99, -94, -100, -97, -111,
                -126, -120, -111, -106, -106, -104, -110, -112,
                -145, -122, -126, -119, -117, -111, -121, -130,
            };
    constexpr std::array<Score, 64> BishopMidgameTable = {
                -84, -91, -86, -112, -105, -96, -79, -94, 
                -66, -57, -62, -74, -58, -54, -59, -63,
                -67, -57, -53, -44, -50, -30, -48, -54,
                -73, -68, -55, -50, -51, -53, -68, -74,
                -77, -71, -70, -57, -59, -69, -71, -74,
                -73, -70, -70, -69, -68, -70, -69, -66,
                -73, -73, -66, -77, -74, -66, -65, -70,
                -83, -73, -82, -84, -82, -85, -71, -76,
            };
    constexpr std::array<Score, 64> RookMidgameTable = {
                -157, -160, -154, -151, -143, -130, -146, -138, 
                -164, -164, -155, -142, -151, -136, -140, -127,
                -175, -163, -160, -160, -143, -142, -122, -138,
                -183, -177, -175, -168, -166, -168, -164, -163,
                -193, -190, -185, -178, -180, -189, -176, -182,
                -197, -192, -188, -189, -185, -187, -171, -182,
                -199, -193, -185, -187, -184, -183, -176, -190,
                -192, -189, -185, -183, -181, -187, -179, -192,
            };
    constexpr std::array<Score, 64> QueenMidgameTable = {
                -210, -206, -189, -176, -174, -172, -169, -198, 
                -190, -201, -197, -203, -201, -176, -186, -164,
                -191, -192, -192, -187, -182, -161, -161, -165,
                -201, -198, -196, -196, -196, -189, -190, -188,
                -201, -201, -201, -198, -198, -199, -194, -192,
                -202, -199, -201, -202, -201, -198, -191, -193,
                -202, -200, -196, -196, -197, -192, -190, -184,
                -204, -208, -206, -200, -202, -209, -196, -203,
            };
    constexpr std::array<Score, 64> KingMidgameTable = {
                20, 22, 22, -48, -23, -7, 13, 81, 
                -48, -27, -44, 3, -26, -14, -7, -25,
                -57, -12, -39, -47, -28, 8, -11, -25,
                -48, -51, -55, -72, -68, -54, -55, -75,
                -41, -45, -63, -70, -72, -56, -59, -71,
                -21, -12, -40, -44, -43, -44, -20, -29,
                24, 1, -4, -22, -23, -14, 9, 14,
                22, 32, 17, -31, -1, -18, 21, 23,
            };

    constexpr std::array<std::array<Score, 64>, 6> MidgameTables = {
        {
            PawnMidgameTable,
            KnightMidgameTable,
            BishopMidgameTable,
            RookMidgameTable,
            QueenMidgameTable,
            KingMidgameTable,
        }
    };

    constexpr std::array<Score, 64> PawnEndgameTable = {
                0, 0, 0, 0, 0, 0, 0, 0,
                106, 102, 102, 78, 75, 81, 103, 110,
                71, 74, 57, 46, 43, 36, 60, 58,
                37, 31, 22, 17, 13, 15, 24, 24,
                24, 23, 15, 13, 12, 13, 18, 15,
                21, 22, 14, 20, 16, 15, 17, 13,
                24, 24, 18, 19, 23, 18, 17, 14,
                0, 0, 0, 0, 0, 0, 0, 0,
            };
    constexpr std::array<Score, 64> KnightEndgameTable = {
                28, 56, 63, 55, 58, 48, 58, 16,
                53, 62, 64, 64, 59, 54, 61, 45,
                61, 68, 75, 76, 67, 65, 63, 54,
                66, 76, 81, 82, 83, 80, 75, 61,
                66, 71, 82, 82, 84, 78, 72, 62,
                58, 67, 72, 79, 78, 70, 64, 58,
                54, 62, 66, 67, 66, 65, 56, 58,
                52, 43, 59, 61, 60, 54, 46, 47,
            };
    constexpr std::array<Score, 64> BishopEndgameTable = {
                29, 33, 31, 39, 35, 31, 27, 27,
                21, 31, 32, 34, 29, 28, 33, 20,
                35, 32, 36, 31, 33, 34, 32, 31,
                33, 40, 37, 44, 40, 39, 39, 34,
                30, 39, 43, 40, 41, 40, 37, 25,
                30, 36, 39, 39, 41, 39, 30, 25,
                28, 27, 27, 34, 35, 29, 31, 18,
                20, 29, 18, 29, 27, 27, 21, 15,
            };
    constexpr std::array<Score, 64> RookEndgameTable = {
                139, 141, 144, 141, 136, 129, 134, 133,
                139, 145, 146, 140, 140, 134, 132, 127,
                140, 140, 139, 138, 131, 128, 126, 124,
                141, 140, 143, 139, 133, 132, 131, 129,
                137, 137, 138, 136, 135, 135, 128, 129,
                134, 133, 133, 135, 132, 129, 120, 120,
                132, 133, 133, 134, 129, 127, 123, 126,
                128, 133, 137, 136, 133, 130, 128, 123,
            };
    constexpr std::array<Score, 64> QueenEndgameTable = {
                136, 142, 147, 141, 140, 139, 120, 139,
                123, 144, 157, 165, 174, 156, 150, 138,
                130, 137, 156, 156, 165, 155, 140, 135,
                134, 144, 152, 161, 167, 159, 154, 146,
                130, 143, 146, 159, 156, 152, 143, 136,
                125, 132, 142, 142, 145, 141, 130, 123,
                120, 122, 122, 128, 130, 117, 104, 91,
                117, 121, 124, 121, 122, 121, 104, 108,
            };
    constexpr std::array<Score, 64> KingEndgameTable = {
                -49, -28, -21, 4, -4, -2, -8, -60,
                -2, 13, 17, 9, 20, 23, 21, 6,
                6, 15, 23, 28, 29, 25, 26, 10,
                1, 17, 25, 30, 30, 29, 24, 13,
                -6, 9, 20, 26, 26, 20, 15, 6,
                -11, -1, 9, 15, 15, 11, 1, -5,
                -23, -9, -3, 2, 4, -1, -11, -20,
                -39, -30, -21, -12, -24, -14, -26, -40,
            };

    constexpr std::array<std::array<Score, 64>, 6> EndgameTables = {
        {
            PawnEndgameTable,
            KnightEndgameTable,
            BishopEndgameTable,
            RookEndgameTable,
            QueenEndgameTable,
            KingEndgameTable,
        }
    };

    template <bool is_endgame>
    constexpr inline Score get_psqt_score(const Piece p, uint8_t pos) {
        if (p.get_side() == Side::WHITE) {
            pos ^= 0b00111000;
        }
        if constexpr (is_endgame) {
            return EndgameTables[static_cast<int>(p.get_type()) - 1][pos];
        } else {
            return MidgameTables[static_cast<int>(p.get_type()) - 1][pos];
        }
    }

    // clang-format on
};