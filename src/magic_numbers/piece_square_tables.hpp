#pragma once

#include <array>

#include "../utils.hpp"
#include "../pieces.hpp"

namespace PieceSquareTables {
    // clang-format off

    constexpr std::array<Score, 6> MidgameScores = { 128, 483, 557, 688, 1368,  0};
    constexpr std::array<Score, 6> EndgameScores = { 131, 428, 438, 577,  1213,  0};

    constexpr std::array<Score, 64> PawnMidgameTable = {
                0, 0, 0, 0, 0, 0, 0, 0, 
                122, 172, 122, 174, 157, 119, 4, -40,
                -15, 5, 65, 76, 78, 118, 84, 13,
                -43, 0, 4, 8, 46, 31, 39, -2,
                -60, -15, -18, 11, 11, -1, 16, -22,
                -64, -21, -23, -21, 4, -13, 40, -12,
                -66, -24, -31, -47, -15, 14, 53, -27,
                0, 0, 0, 0, 0, 0, 0, 0,
            };
    constexpr std::array<Score, 64> KnightMidgameTable = {
                -238, -175, -69, 11, 38, -79, -152, -142, 
                8, 36, 79, 104, 68, 192, 26, 66,
                32, 78, 111, 124, 205, 202, 119, 69,
                6, 29, 72, 108, 69, 119, 43, 68,
                -19, 9, 31, 33, 48, 39, 39, 0,
                -52, -13, 5, 16, 35, 13, 23, -23,
                -73, -52, -25, -7, -5, 2, -19, -26,
                -140, -61, -76, -51, -44, -24, -58, -89,
            };
    constexpr std::array<Score, 64> BishopMidgameTable = {
                -57, -80, -62, -151, -127, -96, -38, -90, 
                3, 34, 18, -24, 31, 46, 27, 14,
                1, 35, 47, 78, 57, 126, 65, 44,
                -19, -1, 43, 59, 55, 47, -3, -22,
                -34, -11, -8, 35, 28, -5, -12, -22,
                -21, -8, -8, -6, -4, -10, -4, 4,
                -18, -17, 5, -34, -21, 4, 9, -8,
                -52, -18, -50, -57, -50, -58, -14, -30,
            };
    constexpr std::array<Score, 64> RookMidgameTable = {
                56, 46, 66, 77, 102, 147, 94, 122, 
                33, 32, 64, 108, 74, 127, 112, 157,
                -3, 35, 44, 47, 104, 106, 175, 121,
                -31, -10, -4, 20, 24, 19, 34, 36,
                -66, -55, -38, -16, -21, -52, -8, -30,
                -80, -62, -48, -51, -40, -47, 8, -27,
                -86, -65, -39, -44, -37, -33, -8, -57,
                -61, -54, -39, -31, -24, -44, -17, -62,
            };
    constexpr std::array<Score, 64> QueenMidgameTable = {
                0, 12, 71, 117, 121, 133, 139, 40, 
                67, 31, 43, 23, 32, 114, 81, 155,
                64, 62, 60, 78, 94, 166, 167, 153,
                31, 40, 47, 48, 48, 72, 68, 73,
                29, 31, 30, 41, 40, 37, 54, 62,
                27, 38, 31, 27, 32, 41, 64, 56,
                27, 33, 48, 46, 43, 61, 68, 89,
                22, 7, 15, 33, 25, 3, 49, 23,
            };
    constexpr std::array<Score, 64> KingMidgameTable = {
                50, 67, 74, -152, -70, -7, 53, 194, 
                -149, -78, -133, 22, -72, -34, -8, -63,
                -178, -24, -116, -143, -81, 41, -22, -68,
                -146, -156, -171, -229, -214, -168, -170, -237,
                -124, -137, -196, -221, -228, -174, -183, -225,
                -55, -25, -120, -133, -131, -134, -54, -82,
                96, 20, 2, -60, -63, -33, 46, 63,
                88, 123, 73, -90, 11, -47, 84, 93,
            };

    constexpr std::array<std::array<Score, 64>, 6> MidgameTables = {
        {
            PawnMidgameTable,
            KnightMidgameTable,
            BishopMidgameTable,
            RookMidgameTable,
            QueenMidgameTable,
            KingMidgameTable,
        }
    };

    constexpr std::array<Score, 64> PawnEndgameTable = {
                0, 0, 0, 0, 0, 0, 0, 0,
                360, 348, 348, 267, 256, 279, 350, 375,
                243, 255, 198, 161, 149, 126, 207, 200,
                129, 110, 78, 62, 47, 55, 85, 87,
                87, 83, 54, 48, 45, 49, 67, 55,
                77, 81, 52, 71, 60, 55, 64, 50,
                85, 87, 64, 71, 84, 64, 63, 51,
                0, 0, 0, 0, 0, 0, 0, 0,
            };
    constexpr std::array<Score, 64> KnightEndgameTable = {
                9, 103, 124, 98, 107, 76, 109, -31,
                92, 122, 130, 128, 113, 96, 118, 64,
                117, 141, 166, 168, 139, 132, 124, 95,
                137, 169, 186, 188, 192, 181, 166, 119,
                136, 154, 190, 188, 194, 177, 155, 121,
                108, 138, 155, 179, 176, 147, 130, 109,
                96, 121, 136, 139, 137, 134, 103, 107,
                87, 57, 112, 117, 114, 96, 68, 73,
            };
    constexpr std::array<Score, 64> BishopEndgameTable = {
                148, 160, 154, 178, 167, 152, 140, 138,
                118, 151, 155, 162, 147, 142, 160, 116,
                165, 157, 170, 152, 159, 161, 155, 153,
                161, 183, 173, 195, 183, 179, 181, 162,
                150, 178, 193, 184, 186, 184, 174, 132,
                150, 168, 179, 180, 185, 180, 150, 133,
                142, 140, 139, 163, 166, 147, 151, 107,
                116, 147, 108, 147, 141, 141, 118, 97,
            };
    constexpr std::array<Score, 64> RookEndgameTable = {
                460, 468, 477, 467, 452, 429, 446, 440,
                461, 480, 485, 464, 464, 445, 438, 420,
                465, 464, 462, 457, 435, 424, 416, 412,
                469, 463, 474, 462, 442, 436, 433, 428,
                455, 454, 457, 452, 449, 449, 425, 426,
                446, 442, 440, 448, 439, 427, 396, 399,
                438, 440, 441, 444, 429, 422, 408, 418,
                424, 443, 456, 452, 440, 431, 424, 408,
            };
    constexpr std::array<Score, 64> QueenEndgameTable = {
                703, 724, 741, 722, 719, 709, 650, 713,
                661, 732, 774, 803, 831, 771, 751, 709,
                684, 708, 773, 772, 800, 769, 717, 701,
                698, 731, 758, 787, 810, 782, 765, 736,
                685, 729, 738, 780, 771, 758, 727, 702,
                668, 689, 725, 723, 733, 721, 684, 661,
                650, 657, 657, 676, 682, 640, 597, 553,
                640, 652, 663, 653, 655, 655, 595, 607,
            };
    constexpr std::array<Score, 64> KingEndgameTable = {
                -143, -75, -51, 30, 4, 10, -8, -169,
                10, 60, 72, 45, 84, 95, 87, 37,
                35, 66, 94, 108, 112, 102, 105, 48,
                19, 72, 99, 118, 118, 113, 98, 60,
                -4, 45, 84, 104, 105, 84, 65, 37,
                -20, 14, 47, 66, 66, 52, 19, -2,
                -62, -15, 5, 22, 28, 11, -20, -52,
                -115, -84, -53, -23, -66, -30, -71, -119,
            };

    constexpr std::array<std::array<Score, 64>, 6> EndgameTables = {
        {
            PawnEndgameTable,
            KnightEndgameTable,
            BishopEndgameTable,
            RookEndgameTable,
            QueenEndgameTable,
            KingEndgameTable,
        }
    };

    template <bool is_endgame>
    constexpr inline Score get_psqt_score(const Piece p, uint8_t pos) {
        if (p.get_side() == Side::WHITE) {
            pos ^= 0b00111000;
        }
        if constexpr (is_endgame) {
            return EndgameTables[static_cast<int>(p.get_type()) - 1][pos];
        } else {
            return MidgameTables[static_cast<int>(p.get_type()) - 1][pos];
        }
    }

    // clang-format on
};